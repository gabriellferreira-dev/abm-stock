{"version":3,"sources":["services/api.js","provider/Provider.js","styled-components/Table.js","components/Table.js","styled-components/Section.js","styled-components/Button.js","styled-components/Container.js","styled-components/Form.js","styled-components/Input.js","styled-components/TextField.js","utils/checkEmptyField.js","utils/validateManyFields.js","styled-components/List.js","components/List.js","components/StockForm.js","components/ModalRegister.js","styled-components/Header.js","pages/Home.js","utils/checkExistClient.js","components/FormClientLogin.js","styled-components/ImageBg.js","pages/Login.js","components/FormClientRegister.js","pages/Register.js","styled-components/globalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["URL","create","endpoint","data","a","fetch","headers","method","body","JSON","stringify","response","json","created","get","getById","id","edit","updated","remove","GlobalContext","createContext","Provider","children","useState","products","setProducts","stocks","setStocks","clients","setClients","client","setClient","isLogged","setLogged","isUpdating","setUpdating","getStocks","api","result","getProducts","context","value","StyledTable","styled","Table","TableComponent","handleModal","getStock","useContext","removeStock","find","stock","_id","handleClickDelete","target","handleClickSelect","sx","minWidth","TableHead","TableRow","TableCell","TableBody","map","quantity","price","product","name","Button","variant","color","onClick","Section","section","login","css","StyledButton","Container","div","Form","form","register","Input","input","TextField","checkEmptyField","classList","add","validateManyFields","inputs","forEach","Array","from","every","StyledList","ul","notFound","List","searched","setProduct","setIsSearching","productName","listSearchedRef","useRef","createProduct","onRegisterProduct","useEffect","handleClickOutside","event","current","contains","includes","document","addEventListener","removeEventListener","length","ref","i","StockForm","setSearched","isSearching","productStock","setProductStock","productInputRef","inputsContainerRef","handleChange","filter","toLowerCase","searchProduct","findProduct","registerStock","toRegister","updateStock","rest","toUpdate","handleClick","querySelectorAll","inputValidation","required","placeholder","onChange","htmlFor","type","style","position","top","left","transform","width","maxHeight","height","bgcolor","boxShadow","fontSize","textAlign","display","flexDirection","justifyContent","alignItems","padding","ModalRegister","open","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","Typography","component","Header","header","Home","setOpen","setStock","getData","size","to","checkExistClient","email","FormClientLogin","loginInputRef","setEmail","errorMessage","setErrorMessage","getClients","validateClient","clientExist","onSubmit","e","preventDefault","fieldValidation","ImageBg","Login","FormClientRegister","validation","setValidation","isCreated","setCreated","validateFields","createClient","error","lastName","hidden","GlobalStyle","createGlobalStyle","App","path","exact","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.970780b7.chunk.js","sourcesContent":["const URL = 'https://crudcrud.com/api/f5f2d99dd78a402087d2fadca60f9f83';\n\nexport const create = async (endpoint, data) => {\n  const response = await fetch(`${URL}/${endpoint}`, {\n    headers: { 'Content-Type': 'application/json; charset=utf-8' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  const created = await response.json();\n  return created;\n};\n\nexport const get = async (endpoint) => {\n  const response = await fetch(`${URL}/${endpoint}`);\n  const data = await response.json();\n  return data;\n};\n\nexport const getById = async (endpoint, id) => {\n  const response = await fetch(`${URL}/${endpoint}/${id}`);\n  const data = await response.json();\n  return data;\n};\n\nexport const edit = async (endpoint, id, data) => {\n  const response = await fetch(`${URL}/${endpoint}/${id}`, {\n    headers: { 'Content-Type': 'application/json; charset=utf-8' },\n    method: 'PUT',\n    body: JSON.stringify(data),\n  });\n  const updated = await response.json();\n  return updated;\n};\n\nexport const remove = async (endpoint, id) => {\n  await fetch(`${URL}/${endpoint}/${id}`, {\n    method: 'DELETE',\n  });\n};\n","import { createContext, useState } from 'react';\nimport * as api from '../services/api';\n\nexport const GlobalContext = createContext({});\n\nconst Provider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [client, setClient] = useState();\n  const [isLogged, setLogged] = useState(false);\n  const [isUpdating, setUpdating] = useState(false);\n\n  const getStocks = async () => {\n    const result = await api.get('stocks');\n    setStocks(result);\n  };\n\n  const getProducts = async () => {\n    const result = await api.get('products');\n    setProducts(result);\n  };\n\n  const context = {\n    products,\n    setProducts,\n    isLogged,\n    setLogged,\n    clients,\n    setClients,\n    client,\n    setClient,\n    stocks,\n    setStocks,\n    getStocks,\n    getProducts,\n    isUpdating,\n    setUpdating,\n  };\n\n  return (\n    <GlobalContext.Provider value={context}>{children}</GlobalContext.Provider>\n  );\n};\n\nexport default Provider;","import { Table } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const StyledTable = styled(Table)`\n  width: 100%;\n\n  & th,\n  & td {\n    font-size: 1.4rem;\n    font-family: 'Montserrat', sans-serif;\n  }\n\n  & tbody {\n    & tr {\n      transition: background 0.2s ease;\n      width: 100%;\n\n      &:nth-child(even) {\n        background-color: #f6f6f6;\n      }\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.1);\n\n        & td {\n          font-weight: 500;\n        }\n      }\n\n      & td {\n        &:nth-child(1) {\n          font-weight: 500;\n        }\n\n        &:last-child {\n          text-align: center;\n          & button {\n            margin: 0 5px;\n            font-weight: 500;\n            font-size: 1.1rem;\n          }\n        }\n      }\n    }\n  }\n`;\n","import {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button,\n} from '@mui/material';\nimport { useContext } from 'react';\nimport { GlobalContext } from '../provider/Provider';\nimport { StyledTable } from '../styled-components/Table';\nimport * as api from '../services/api';\n\nfunction TableComponent({ handleModal, getStock }) {\n  const { stocks, getStocks, setUpdating } = useContext(GlobalContext);\n\n  const removeStock = async (id) => {\n    const isExistStock = stocks.find((stock) => stock._id === id);\n\n    if (isExistStock) {\n      await api.remove('stocks', id);\n      await getStocks();\n    }\n  };\n\n  const handleClickDelete = ({ target: { id } }) => {\n    removeStock(id);\n  };\n\n  const handleClickSelect = ({ target: { id } }) => {\n    getStock(id);\n    handleModal(true);\n    setUpdating(true);\n  };\n\n  return (\n    <StyledTable sx={{ minWidth: 700 }} aria-label='customized table'>\n      <TableHead>\n        <TableRow>\n          <TableCell>_id</TableCell>\n          <TableCell>Product Name</TableCell>\n          <TableCell>Quantity</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {stocks &&\n          stocks.map(({ _id, quantity, price, product }) => (\n            <TableRow data-testid='product' key={_id}>\n              <TableCell>{_id}</TableCell>\n              <TableCell>{product.name}</TableCell>\n              <TableCell>{quantity}</TableCell>\n              <TableCell>{price}</TableCell>\n              <TableCell>\n                <Button\n                  variant='contained'\n                  color='warning'\n                  id={_id}\n                  onClick={handleClickSelect}\n                >\n                  Select\n                </Button>\n                <Button\n                  variant='outlined'\n                  color='error'\n                  id={_id}\n                  onClick={handleClickDelete}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </StyledTable>\n  );\n}\n\nexport default TableComponent;","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 80px 20px 10px;\n  position: relative;\n  overflow: hidden;\n\n  ${({ login }) =>\n    login &&\n    css`\n      background-color: #fff;\n      height: 100vh;\n      padding: 0;\n      flex-direction: row;\n      justify-content: center;\n\n      & a {\n        position: absolute;\n        bottom: 20px;\n        text-decoration: none;\n        font-weight: 500;\n        color: #ffc529;\n\n        :visited {\n          color: #ffc529;\n        }\n      }\n    `}\n`;\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const StyledButton = styled(Button)`\n  font-size: 1.6rem !important;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;","import styled, { css } from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n\n  & h1 {\n    font-size: 3rem;\n    color: #272d2f;\n    font-weight: 700;\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & span {\n      font-size: 1.2rem;\n      font-weight: 600;\n    }\n  }\n\n  ${({ login, register }) =>\n    (login || register) &&\n    css`\n      width: 400px;\n      height: 300px;\n      background: white;\n      position: relative;\n      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);\n\n      & button {\n        padding: 10px 20px;\n        width: 200px;\n        background-color: #ffc529;\n        border: none;\n        border-radius: 5px;\n        font-size: 1.4rem;\n        color: white;\n        font-weight: 600;\n        transition: background 0.2s ease;\n        margin: 15px 0;\n\n        &:hover {\n          background-color: rgba(255, 197, 41, 0.8);\n        }\n      }\n    `}\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  outline: none;\n  padding: 5px 10px 5px;\n  height: 40px;\n  background: white;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  transition: border 0.1s ease;\n  border-radius: 5px;\n\n  ::placeholder {\n    color: transparent;\n    user-select: none;\n  }\n\n  &:focus,\n  &:not(:placeholder-shown) {\n    border: 2px solid rgba(255, 197, 41, 1);\n\n    & + label {\n      transform: translateY(-125%);\n      background: white;\n      color: #ffc529;\n      font-size: 1.2rem;\n      font-weight: 600;\n    }\n  }\n\n  &.error {\n    border: 2px solid rgba(255, 0, 0, 1);\n\n    & + label {\n      color: red;\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const TextField = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  justify-content: center;\n  width: 80%;\n  margin: 5px 0;\n\n  & label {\n    position: absolute;\n    left: 5px;\n    font-size: 1.4rem;\n    font-weight: 500;\n    padding: 0 5px;\n    transition: all 0.3s ease;\n    cursor: text;\n  }\n`;\n","const checkEmptyField = (input) => {\n  if (!input.value) {\n    input.classList.add('error');\n    return `Field ${input.name} is required.`;\n  } else {\n    input.classList.remove('error');\n  }\n};\n\nexport default checkEmptyField;\n","import checkEmptyField from './checkEmptyField';\n\nconst validateManyFields = (inputs) => {\n  inputs.forEach((input) => {\n    checkEmptyField(input);\n  });\n  return Array.from(inputs).every((input) => input.value);\n};\n\nexport default validateManyFields;\n","import styled, { css } from 'styled-components';\n\nexport const StyledList = styled.ul`\n  width: 80%;\n  max-height: 100px;\n  list-style: none;\n  background-color: white;\n  overflow: hidden;\n  overflow-y: auto;\n  position: absolute;\n  z-index: 1000;\n  text-align: left;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\n  top: 50px;\n\n  & li {\n    padding: 5px 10px;\n    transition: background 0.2s ease;\n  }\n\n  ${({ notFound }) =>\n    !notFound &&\n    css`\n      & li:hover {\n        background-color: rgba(0, 0, 0, 0.25);\n        font-weight: 500;\n      }\n    `}\n\n  ${({ notFound }) =>\n    notFound &&\n    css`\n      text-align: center;\n    `}\n`;\n","import { Button } from '@mui/material';\nimport { useContext, useEffect, useRef } from 'react';\nimport { StyledList } from '../styled-components/List';\nimport * as api from '../services/api';\nimport { GlobalContext } from '../provider/Provider';\n\nexport default function List({\n  searched,\n  setProduct,\n  setIsSearching,\n  productName,\n}) {\n  const listSearchedRef = useRef();\n  const { getProducts } = useContext(GlobalContext);\n\n  const createProduct = async () => {\n    await api.create('products', { name: productName });\n  };\n\n  const onRegisterProduct = async () => {\n    createProduct();\n    getProducts();\n    setIsSearching(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const validations = [\n        listSearchedRef && !listSearchedRef.current.contains(event.target),\n      ];\n\n      if (validations.includes(true)) {\n        setIsSearching(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setIsSearching]);\n\n  return (\n    <StyledList\n      name='products'\n      notFound={!searched.length}\n      ref={listSearchedRef}\n    >\n      {!searched.length ? (\n        <li>\n          Nenhum produto cadastrado com esse nome.\n          <Button\n            name='register'\n            variant='contained'\n            onClick={onRegisterProduct}\n          >\n            Register Product\n          </Button>\n        </li>\n      ) : (\n        searched.map(({ name }, i) => (\n          <li key={i} onClick={() => setProduct(name)}>\n            {name}\n          </li>\n        ))\n      )}\n    </StyledList>\n  );\n}","import { Button } from '@mui/material';\nimport { useContext, useRef, useState, useEffect } from 'react';\nimport { GlobalContext } from '../provider/Provider';\nimport { Container } from '../styled-components/Container';\nimport { Form } from '../styled-components/Form';\nimport { Input } from '../styled-components/Input';\nimport { TextField } from '../styled-components/TextField';\nimport checkEmptyField from '../utils/checkEmptyField';\nimport validateManyFields from '../utils/validateManyFields';\nimport List from './List';\nimport * as api from '../services/api';\n\nexport default function StockForm({ handleModal, stock }) {\n  const { products, client, getStocks, isUpdating, setUpdating } =\n    useContext(GlobalContext);\n  const [searched, setSearched] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [productStock, setProductStock] = useState({});\n  const productInputRef = useRef();\n  const inputsContainerRef = useRef();\n\n  useEffect(() => {\n    setProductStock({\n      name: stock?.product?.name,\n      ...stock,\n    });\n  }, [stock]);\n\n  const searchProduct = (value) => {\n    setIsSearching(true);\n    const result = products.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n    setSearched(result);\n  };\n\n  const onClickSearchedItem = (value) => {\n    setProductStock({ ...productStock, name: value });\n    setIsSearching(false);\n  };\n\n  const handleChange = ({ target, target: { name, value } }) => {\n    setProductStock({ ...productStock, [name]: value });\n    checkEmptyField(target);\n\n    if (name === 'name') {\n      searchProduct(value);\n    }\n  };\n\n  const findProduct = () =>\n    products.find(\n      ({ name }) => name.toLowerCase() === productStock.name.toLowerCase()\n    );\n\n  const registerStock = async () => {\n    const product = findProduct();\n    const { price, quantity } = productStock;\n    const toRegister = { price, quantity, product, client };\n    await api.create('stocks', toRegister);\n    await getStocks();\n  };\n\n  const updateStock = async () => {\n    const product = findProduct();\n    const { price, quantity } = productStock;\n    const { _id, ...rest } = stock;\n    const toUpdate = { ...rest, price, quantity, product };\n    await api.edit('stocks', stock._id, toUpdate);\n    await getStocks();\n  };\n\n  const handleClick = async () => {\n    const inputs = inputsContainerRef.current.querySelectorAll('input');\n\n    const inputValidation = validateManyFields(inputs);\n\n    const validations = [\n      inputValidation,\n      productStock.product,\n      productStock.quantity,\n      productStock.price,\n    ];\n\n    if (validations.includes(true)) {\n      if (isUpdating) {\n        updateStock();\n        setUpdating(false);\n      } else {\n        registerStock();\n      }\n      handleModal(false);\n    }\n  };\n\n  return (\n    <Form>\n      <div ref={inputsContainerRef}>\n        <Container ref={productInputRef}>\n          <TextField>\n            <Input\n              required\n              id='product-name'\n              placeholder='Insert product name'\n              onChange={handleChange}\n              value={productStock.name || ''}\n              name='name'\n            />\n            <label htmlFor='product-name'>Name</label>\n          </TextField>\n          {isSearching && (\n            <List\n              searched={searched}\n              setProduct={onClickSearchedItem}\n              setIsSearching={setIsSearching}\n              productName={productStock.name || ''}\n            />\n          )}\n        </Container>\n        <TextField>\n          <Input\n            required\n            id='product-quantity'\n            placeholder='Insert quantity'\n            type='number'\n            value={productStock.quantity || ''}\n            name='quantity'\n            onChange={handleChange}\n          />\n          <label htmlFor='product-quantity'>Quantity</label>\n        </TextField>\n        <TextField>\n          <Input\n            required\n            id='product-price'\n            value={productStock.price || ''}\n            placeholder='Insert price'\n            type='number'\n            name='price'\n            onChange={handleChange}\n          />\n          <label htmlFor='product-price'>Price</label>\n        </TextField>\n      </div>\n      <Button variant='contained' color='success' onClick={handleClick}>\n        {isUpdating ? 'Update' : 'Register'}\n      </Button>\n    </Form>\n  );\n}","import { Fade, Modal, Typography, Box, Backdrop } from '@mui/material';\nimport StockForm from './StockForm';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  maxHeight: 300,\n  height: '100%',\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  fontSize: '1.6rem',\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  alignItems: 'center',\n  padding: '5px',\n};\n\nfunction ModalRegister({ handleModal, open, stock }) {\n  return (\n    <Modal\n      aria-labelledby='transition-modal-title'\n      aria-describedby='transition-modal-description'\n      open={open}\n      onClose={handleModal}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Typography id='transition-modal-title' variant='h4' component='h2'>\n            Register new stock\n          </Typography>\n          <StockForm handleModal={handleModal} stock={stock} />\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n\nexport default ModalRegister;","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  width: 100%;\n  height: 60px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  background-color: #272d2f;\n  top: 0;\n  left: 0;\n  position: fixed;\n  margin-bottom: 10px;\n\n  & h1 {\n    color: #ffc529;\n    font-weight: 700;\n    font-size: 1.6em;\n  }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { Section } from '../styled-components/Section';\nimport * as api from '../services/api';\nimport { GlobalContext } from '../provider/Provider';\nimport { StyledButton } from '../styled-components/Button';\nimport ModalRegister from '../components/ModalRegister';\nimport { Header } from '../styled-components/Header';\n\nfunction Home() {\n  const { isLogged, getStocks, getProducts, setUpdating } =\n    useContext(GlobalContext);\n  const [open, setOpen] = useState(false);\n  const [stock, setStock] = useState({});\n\n  const handleModal = () => setOpen(!open);\n\n  const handleNewStockClick = () => {\n    setUpdating(false);\n    setStock({});\n    handleModal();\n  };\n\n  const getStock = async (id) => {\n    const result = await api.getById('stocks', id);\n    setStock(result);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      await getProducts();\n      await getStocks();\n    };\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!isLogged) {\n    return <Redirect to='/login' />;\n  }\n\n  return (\n    <Section>\n      <Header>\n        <h1>ABM Stock</h1>\n        <StyledButton\n          variant='contained'\n          size='small'\n          onClick={handleNewStockClick}\n        >\n          New stock\n        </StyledButton>\n      </Header>\n      <Table handleModal={handleModal} getStock={getStock} />\n      <ModalRegister open={open} handleModal={handleModal} stock={stock} />\n    </Section>\n  );\n}\n\nexport default Home;","import * as api from '../services/api';\n\nconst checkExistClient = async (email) => {\n  const clients = await api.get('clients');\n  const result = clients.find((client) => client.email === email);\n  return result;\n};\n\nexport default checkExistClient;\n","import { useContext, useRef, useState } from 'react';\nimport { Form } from '../styled-components/Form';\nimport { Input } from '../styled-components/Input';\nimport { TextField } from '../styled-components/TextField';\nimport checkEmptyField from '../utils/checkEmptyField';\nimport { GlobalContext } from '../provider/Provider';\nimport * as api from '../services/api';\nimport checkExistClient from '../utils/checkExistClient';\n\nexport default function FormClientLogin() {\n  const loginInputRef = useRef();\n  const { setClients, setClient, setLogged } = useContext(GlobalContext);\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getClients = async () => {\n    const clients = await api.get('clients');\n    setClients(clients);\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    const fieldValidation = checkEmptyField(loginInputRef.current);\n\n    setErrorMessage(fieldValidation ? fieldValidation : '');\n\n    setEmail(value);\n  };\n\n  const validateClient = async () => {\n    getClients();\n    const clientExist = await checkExistClient(email);\n\n    setErrorMessage(!clientExist ? 'Client not found' : '');\n\n    if (clientExist) {\n      setLogged(true);\n      setClient(clientExist);\n    }\n  };\n\n  const handleClick = () => {\n    const fieldValidation = checkEmptyField(loginInputRef.current);\n\n    if (!fieldValidation) {\n      validateClient();\n    }\n    setErrorMessage(fieldValidation ? fieldValidation : '');\n  };\n\n  return (\n    <Form login onSubmit={(e) => e.preventDefault()}>\n      <h1>ABM Stock</h1>\n      <div>\n        <TextField>\n          <Input\n            type='email'\n            id='input-email'\n            placeholder='E-mail'\n            required\n            ref={loginInputRef}\n            name='email'\n            onChange={handleChange}\n          />\n          <label htmlFor='input-email'>E-mail</label>\n        </TextField>\n        <span>{errorMessage}</span>\n        <button type='button' onClick={handleClick}>\n          Login\n        </button>\n      </div>\n    </Form>\n  );\n}","import styled from 'styled-components';\n\nconst url =\n  'https://blog.nortesys.com.br/wp-content/uploads/2019/05/288963-entenda-x-riscos-de-gestao-de-estoque-no-excel.jpg';\n\nexport const ImageBg = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(\n      0deg,\n      rgba(32, 31, 90, 0.5),\n      rgba(32, 31, 90, 0.5)\n    ),\n    url(${url});\n  filter: blur(5px);\n  transform: scale(1.1);\n  background-size: cover;\n  background-attachment: fixed;\n  background-repeat: no-repeat;\n  background-position: center;\n  position: absolute;\n`;\n","import { useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport FormClientLogin from '../components/FormClientLogin';\nimport { GlobalContext } from '../provider/Provider';\nimport { ImageBg } from '../styled-components/ImageBg';\nimport { Section } from '../styled-components/Section';\n\nexport default function Login() {\n  const { client } = useContext(GlobalContext);\n  \n  if (client) return <Redirect to='/' />;\n\n  return (\n    <Section login>\n      <ImageBg aria-label='background login page' />\n      <FormClientLogin />\n      <Link to='/register'>Register</Link>\n    </Section>\n  );\n}\n","import { useRef, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from '../styled-components/Form';\nimport { Input } from '../styled-components/Input';\nimport { TextField } from '../styled-components/TextField';\nimport * as api from '../services/api';\nimport checkExistClient from '../utils/checkExistClient';\nimport validateManyFields from '../utils/validateManyFields';\n\nexport default function FormClientRegister() {\n  const [client, setClient] = useState({});\n  const [validation, setValidation] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isCreated, setCreated] = useState(false);\n  const inputsContainerRef = useRef();\n\n  const validateFields = () => {\n    const inputs = inputsContainerRef.current.querySelectorAll('input');\n    const result = validateManyFields(inputs);\n    setValidation(result);\n\n    if (!result) {\n      setErrorMessage('Fill in all fields.');\n    } else {\n      setErrorMessage('');\n    }\n  };\n\n  const createClient = async () => {\n    const clientExist = await checkExistClient(client.email);\n\n    if (!clientExist) {\n      await api.create('clients', client);\n      setErrorMessage('');\n      setCreated(true);\n    }\n    if (clientExist) {\n      setErrorMessage('Customer already registered.');\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    setClient({ ...client, [name]: value });\n    if (!validation) {\n      validateFields();\n    }\n  };\n\n  const handleClick = () => {\n    validateFields();\n\n    const inputsValidation = [!client.name, !client.email, !client.lastName];\n\n    if (!inputsValidation.includes(true)) {\n      createClient();\n    }\n  };\n\n  if (isCreated) return <Redirect to='/login' />;\n\n  return (\n    <Form name='register' onSubmit={(e) => e.preventDefault()}>\n      <h1>Register</h1>\n      <div ref={inputsContainerRef}>\n        <TextField register>\n          <Input\n            type='text'\n            id='input-name'\n            placeholder='Name'\n            name='name'\n            required\n            error={client.name === ''}\n            onChange={handleChange}\n          />\n          <label htmlFor='input-name'>Name</label>\n        </TextField>\n        <TextField>\n          <Input\n            type='text'\n            id='input-last-name'\n            placeholder='Last Name'\n            name='lastName'\n            required\n            error={client.lastName === ''}\n            onChange={handleChange}\n          />\n          <label htmlFor='input-last-name'>Last Name</label>\n        </TextField>\n        <TextField>\n          <Input\n            type='email'\n            id='input-email'\n            placeholder='E-mail'\n            name='email'\n            required\n            error={client.email === ''}\n            onChange={handleChange}\n          />\n          <label htmlFor='input-email'>E-mail</label>\n        </TextField>\n        <span hidden={!errorMessage}>{errorMessage}</span>\n      </div>\n      <button type='button' onClick={handleClick}>\n        Register\n      </button>\n    </Form>\n  );\n}","import { Link } from 'react-router-dom';\nimport FormClientRegister from '../components/FormClientRegister';\nimport { ImageBg } from '../styled-components/ImageBg';\nimport { Section } from '../styled-components/Section';\n\nexport default function Login() {\n  return (\n    <Section login>\n      <ImageBg aria-label='background register page' />\n      <FormClientRegister />\n      <Link to='/login'>Login</Link>\n    </Section>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    font-size: 1.6rem;\n  }\n`;\n","import { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { GlobalStyle } from './styled-components/globalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/login' exact component={Login} />\n        <Route path='/register' exact component={Register} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Provider from './provider/Provider';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <BrowserRouter basename='/'>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}